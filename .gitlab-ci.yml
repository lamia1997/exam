image: docker
variables:
  # DOCKER_HOST variable tells docker how to connect to the daemon (a background service running inside the Docker VM)
  DOCKER_HOST: "tcp://docker:2375/"
  # Environemt Variable for docker:dind service explaining to use overlay2 as supporting driver for docker
  # https://docs.docker.com/storage/storagedriver/overlayfs-driver/
  DOCKER_DRIVER: overlay2
  # We need to disable TLS (https://about.gitlab.com/blog/2019/07/31/docker-in-docker-with-docker-19-dot-03/#disable-tls)
  # to fix the error "docker: Cannot connect to the Docker daemon at tcp://docker:2375. Is the docker daemon running?"
  DOCKER_TLS_CERTDIR: ""


services:
  - docker:dind 

stages:
  - build-n-push-images
  - deploy_dev
  - deploy_prod

build-n-push-images:
  rules:
    - if: $ENVIRONMENT != "dev" || $ENVIRONMENT != "prod"
  before_script:
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
  tags:
    - docker
  stage: build-n-push-images
  script:
    - docker-compose -f docker-compose-build.yaml build --parallel
    - docker images
    - docker push $DOCKERHUB_USER/vote:v1
    - docker push $DOCKERHUB_USER/result:v1
    - docker push $DOCKERHUB_USER/worker:v1
    - docker push $DOCKERHUB_USER/seed:v1
    
deploy-dev:
  rules:
    - if: $ENVIRONMENT == "dev"
  stage: deploy_dev
  tags:
    - docker
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
    - scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY docker-compose.yml ubuntu@13.39.109.252:/home/ubuntu/
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ubuntu@13.39.109.252 "
      ls &&
      docker compose down &&
      docker compose up -d &&
      docker images &&
      docker ps"
deploy-prod:
  rules:
    - if: $ENVIRONMENT == "prod"
  stage: deploy_dev
  tags:
    - docker
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
    - scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY docker-compose.yml ubuntu@35.180.131.96:/home/ubuntu/
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ubuntu@35.180.131.96 "
      ls &&
      docker compose down &&
      docker compose up -d &&
      docker images &&
      docker ps"




